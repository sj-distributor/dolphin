# This schema is generated, please don't update it manually

scalar Time

scalar Upload

scalar _Any

scalar Any

schema {
  query: Query
  mutation: Mutation
}

type Query {
  user(id: ID, filter: UserFilterType): User
  users(current_page: Int = 1, per_page: Int = 10, q: String, sort: [UserSortType!], filter: UserFilterType, rand: Boolean = false): UserResultType
  task(id: ID, filter: TaskFilterType): Task
  tasks(current_page: Int = 1, per_page: Int = 10, q: String, sort: [TaskSortType!], filter: TaskFilterType, rand: Boolean = false): TaskResultType
}

type Mutation {
  createUser(input: UserCreateInput!): User!
  updateUser(id: ID!, input: UserUpdateInput!): User!
  createTask(input: TaskCreateInput!): Task!
  updateTask(id: ID!, input: TaskUpdateInput!): Task!
}

enum ObjectSortType {
  ASC
  DESC
}

directive @format on FIELD_DEFINITION

input FileField {
  hash: String!
  file: Upload!
}

type User {
  id: ID!
  phone: String!
  password: String!
  email: String
  nickname: String
  age: Int
  tasks: [Task!]!
  deletedBy: ID
  updatedBy: ID
  createdBy: ID
  deletedAt: Int
  updatedAt: Int
  createdAt: Int!
  tasksIds: [ID!]
}

type Task {
  id: ID!
  title: String
  user: User
  userId: ID
  deletedBy: ID
  updatedBy: ID
  createdBy: ID
  deletedAt: Int
  updatedAt: Int
  createdAt: Int!
}

input UserCreateInput {
  phone: String!
  password: String!
  email: String
  nickname: String
  age: Int
  tasks: [TaskRelationship]
  tasksIds: [ID!]
}

input UserUpdateInput {
  phone: String
  password: String
  email: String
  nickname: String
  age: Int
  tasks: [TaskRelationship]
  tasksIds: [ID!]
}

input UserSortType {
  id: ObjectSortType
  phone: ObjectSortType
  password: ObjectSortType
  email: ObjectSortType
  nickname: ObjectSortType
  age: ObjectSortType
  deletedBy: ObjectSortType
  updatedBy: ObjectSortType
  createdBy: ObjectSortType
  deletedAt: ObjectSortType
  updatedAt: ObjectSortType
  createdAt: ObjectSortType
  tasksIds: ObjectSortType
  tasks: TaskSortType
}

input UserFilterType {
  AND: [UserFilterType!]
  OR: [UserFilterType!]
  id: ID
  id_ne: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_null: Boolean
  phone: String
  phone_ne: String
  phone_gt: String
  phone_lt: String
  phone_gte: String
  phone_lte: String
  phone_in: [String!]
  phone_like: String
  phone_prefix: String
  phone_suffix: String
  phone_null: Boolean
  password: String
  password_ne: String
  password_gt: String
  password_lt: String
  password_gte: String
  password_lte: String
  password_in: [String!]
  password_like: String
  password_prefix: String
  password_suffix: String
  password_null: Boolean
  email: String
  email_ne: String
  email_gt: String
  email_lt: String
  email_gte: String
  email_lte: String
  email_in: [String!]
  email_like: String
  email_prefix: String
  email_suffix: String
  email_null: Boolean
  nickname: String
  nickname_ne: String
  nickname_gt: String
  nickname_lt: String
  nickname_gte: String
  nickname_lte: String
  nickname_in: [String!]
  nickname_like: String
  nickname_prefix: String
  nickname_suffix: String
  nickname_null: Boolean
  age: Int
  age_ne: Int
  age_gt: Int
  age_lt: Int
  age_gte: Int
  age_lte: Int
  age_in: [Int!]
  age_null: Boolean
  deletedBy: ID
  deletedBy_ne: ID
  deletedBy_gt: ID
  deletedBy_lt: ID
  deletedBy_gte: ID
  deletedBy_lte: ID
  deletedBy_in: [ID!]
  deletedBy_null: Boolean
  updatedBy: ID
  updatedBy_ne: ID
  updatedBy_gt: ID
  updatedBy_lt: ID
  updatedBy_gte: ID
  updatedBy_lte: ID
  updatedBy_in: [ID!]
  updatedBy_null: Boolean
  createdBy: ID
  createdBy_ne: ID
  createdBy_gt: ID
  createdBy_lt: ID
  createdBy_gte: ID
  createdBy_lte: ID
  createdBy_in: [ID!]
  createdBy_null: Boolean
  deletedAt: Int
  deletedAt_ne: Int
  deletedAt_gt: Int
  deletedAt_lt: Int
  deletedAt_gte: Int
  deletedAt_lte: Int
  deletedAt_in: [Int!]
  deletedAt_null: Boolean
  updatedAt: Int
  updatedAt_ne: Int
  updatedAt_gt: Int
  updatedAt_lt: Int
  updatedAt_gte: Int
  updatedAt_lte: Int
  updatedAt_in: [Int!]
  updatedAt_null: Boolean
  createdAt: Int
  createdAt_ne: Int
  createdAt_gt: Int
  createdAt_lt: Int
  createdAt_gte: Int
  createdAt_lte: Int
  createdAt_in: [Int!]
  createdAt_null: Boolean
  tasks: TaskFilterType
}

input UserRelationship {
  id: ID
  phone: String!
  password: String!
  email: String
  nickname: String
  age: Int
  tasksIds: [ID!]
}

type UserResultType {
  data: [User!]!
  total: Int!
  current_page: Int!
  per_page: Int!
  total_page: Int!
}

input TaskCreateInput {
  title: String
  user: UserRelationship
  userId: ID
}

input TaskUpdateInput {
  title: String
  user: UserRelationship
  userId: ID
}

input TaskSortType {
  id: ObjectSortType
  title: ObjectSortType
  userId: ObjectSortType
  deletedBy: ObjectSortType
  updatedBy: ObjectSortType
  createdBy: ObjectSortType
  deletedAt: ObjectSortType
  updatedAt: ObjectSortType
  createdAt: ObjectSortType
  user: UserSortType
}

input TaskFilterType {
  AND: [TaskFilterType!]
  OR: [TaskFilterType!]
  id: ID
  id_ne: ID
  id_gt: ID
  id_lt: ID
  id_gte: ID
  id_lte: ID
  id_in: [ID!]
  id_null: Boolean
  title: String
  title_ne: String
  title_gt: String
  title_lt: String
  title_gte: String
  title_lte: String
  title_in: [String!]
  title_like: String
  title_prefix: String
  title_suffix: String
  title_null: Boolean
  userId: ID
  userId_ne: ID
  userId_gt: ID
  userId_lt: ID
  userId_gte: ID
  userId_lte: ID
  userId_in: [ID!]
  userId_null: Boolean
  deletedBy: ID
  deletedBy_ne: ID
  deletedBy_gt: ID
  deletedBy_lt: ID
  deletedBy_gte: ID
  deletedBy_lte: ID
  deletedBy_in: [ID!]
  deletedBy_null: Boolean
  updatedBy: ID
  updatedBy_ne: ID
  updatedBy_gt: ID
  updatedBy_lt: ID
  updatedBy_gte: ID
  updatedBy_lte: ID
  updatedBy_in: [ID!]
  updatedBy_null: Boolean
  createdBy: ID
  createdBy_ne: ID
  createdBy_gt: ID
  createdBy_lt: ID
  createdBy_gte: ID
  createdBy_lte: ID
  createdBy_in: [ID!]
  createdBy_null: Boolean
  deletedAt: Int
  deletedAt_ne: Int
  deletedAt_gt: Int
  deletedAt_lt: Int
  deletedAt_gte: Int
  deletedAt_lte: Int
  deletedAt_in: [Int!]
  deletedAt_null: Boolean
  updatedAt: Int
  updatedAt_ne: Int
  updatedAt_gt: Int
  updatedAt_lt: Int
  updatedAt_gte: Int
  updatedAt_lte: Int
  updatedAt_in: [Int!]
  updatedAt_null: Boolean
  createdAt: Int
  createdAt_ne: Int
  createdAt_gt: Int
  createdAt_lt: Int
  createdAt_gte: Int
  createdAt_lte: Int
  createdAt_in: [Int!]
  createdAt_null: Boolean
  user: UserFilterType
}

input TaskRelationship {
  id: ID
  title: String
  userId: ID
}

type TaskResultType {
  data: [Task!]!
  total: Int!
  current_page: Int!
  per_page: Int!
  total_page: Int!
}
