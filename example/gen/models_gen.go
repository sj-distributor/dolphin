// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package gen

import (
	"fmt"
	"io"
	"strconv"

	"github.com/99designs/gqlgen/graphql"
)

type BookCategoryFilterType struct {
	And               []*BookCategoryFilterType `json:"AND,omitempty"`
	Or                []*BookCategoryFilterType `json:"OR,omitempty"`
	ID                *string                   `json:"id,omitempty"`
	IDNe              *string                   `json:"id_ne,omitempty"`
	IDGt              *string                   `json:"id_gt,omitempty"`
	IDLt              *string                   `json:"id_lt,omitempty"`
	IDGte             *string                   `json:"id_gte,omitempty"`
	IDLte             *string                   `json:"id_lte,omitempty"`
	IDIn              []string                  `json:"id_in,omitempty"`
	IDNull            *bool                     `json:"id_null,omitempty"`
	Name              *string                   `json:"name,omitempty"`
	NameNe            *string                   `json:"name_ne,omitempty"`
	NameGt            *string                   `json:"name_gt,omitempty"`
	NameLt            *string                   `json:"name_lt,omitempty"`
	NameGte           *string                   `json:"name_gte,omitempty"`
	NameLte           *string                   `json:"name_lte,omitempty"`
	NameIn            []string                  `json:"name_in,omitempty"`
	NameLike          *string                   `json:"name_like,omitempty"`
	NamePrefix        *string                   `json:"name_prefix,omitempty"`
	NameSuffix        *string                   `json:"name_suffix,omitempty"`
	NameNull          *bool                     `json:"name_null,omitempty"`
	Description       *string                   `json:"description,omitempty"`
	DescriptionNe     *string                   `json:"description_ne,omitempty"`
	DescriptionGt     *string                   `json:"description_gt,omitempty"`
	DescriptionLt     *string                   `json:"description_lt,omitempty"`
	DescriptionGte    *string                   `json:"description_gte,omitempty"`
	DescriptionLte    *string                   `json:"description_lte,omitempty"`
	DescriptionIn     []string                  `json:"description_in,omitempty"`
	DescriptionLike   *string                   `json:"description_like,omitempty"`
	DescriptionPrefix *string                   `json:"description_prefix,omitempty"`
	DescriptionSuffix *string                   `json:"description_suffix,omitempty"`
	DescriptionNull   *bool                     `json:"description_null,omitempty"`
	DeletedBy         *string                   `json:"deletedBy,omitempty"`
	DeletedByNe       *string                   `json:"deletedBy_ne,omitempty"`
	DeletedByGt       *string                   `json:"deletedBy_gt,omitempty"`
	DeletedByLt       *string                   `json:"deletedBy_lt,omitempty"`
	DeletedByGte      *string                   `json:"deletedBy_gte,omitempty"`
	DeletedByLte      *string                   `json:"deletedBy_lte,omitempty"`
	DeletedByIn       []string                  `json:"deletedBy_in,omitempty"`
	DeletedByNull     *bool                     `json:"deletedBy_null,omitempty"`
	UpdatedBy         *string                   `json:"updatedBy,omitempty"`
	UpdatedByNe       *string                   `json:"updatedBy_ne,omitempty"`
	UpdatedByGt       *string                   `json:"updatedBy_gt,omitempty"`
	UpdatedByLt       *string                   `json:"updatedBy_lt,omitempty"`
	UpdatedByGte      *string                   `json:"updatedBy_gte,omitempty"`
	UpdatedByLte      *string                   `json:"updatedBy_lte,omitempty"`
	UpdatedByIn       []string                  `json:"updatedBy_in,omitempty"`
	UpdatedByNull     *bool                     `json:"updatedBy_null,omitempty"`
	CreatedBy         *string                   `json:"createdBy,omitempty"`
	CreatedByNe       *string                   `json:"createdBy_ne,omitempty"`
	CreatedByGt       *string                   `json:"createdBy_gt,omitempty"`
	CreatedByLt       *string                   `json:"createdBy_lt,omitempty"`
	CreatedByGte      *string                   `json:"createdBy_gte,omitempty"`
	CreatedByLte      *string                   `json:"createdBy_lte,omitempty"`
	CreatedByIn       []string                  `json:"createdBy_in,omitempty"`
	CreatedByNull     *bool                     `json:"createdBy_null,omitempty"`
	DeletedAt         *int                      `json:"deletedAt,omitempty"`
	DeletedAtNe       *int                      `json:"deletedAt_ne,omitempty"`
	DeletedAtGt       *int                      `json:"deletedAt_gt,omitempty"`
	DeletedAtLt       *int                      `json:"deletedAt_lt,omitempty"`
	DeletedAtGte      *int                      `json:"deletedAt_gte,omitempty"`
	DeletedAtLte      *int                      `json:"deletedAt_lte,omitempty"`
	DeletedAtIn       []int                     `json:"deletedAt_in,omitempty"`
	DeletedAtNull     *bool                     `json:"deletedAt_null,omitempty"`
	UpdatedAt         *int                      `json:"updatedAt,omitempty"`
	UpdatedAtNe       *int                      `json:"updatedAt_ne,omitempty"`
	UpdatedAtGt       *int                      `json:"updatedAt_gt,omitempty"`
	UpdatedAtLt       *int                      `json:"updatedAt_lt,omitempty"`
	UpdatedAtGte      *int                      `json:"updatedAt_gte,omitempty"`
	UpdatedAtLte      *int                      `json:"updatedAt_lte,omitempty"`
	UpdatedAtIn       []int                     `json:"updatedAt_in,omitempty"`
	UpdatedAtNull     *bool                     `json:"updatedAt_null,omitempty"`
	CreatedAt         *int                      `json:"createdAt,omitempty"`
	CreatedAtNe       *int                      `json:"createdAt_ne,omitempty"`
	CreatedAtGt       *int                      `json:"createdAt_gt,omitempty"`
	CreatedAtLt       *int                      `json:"createdAt_lt,omitempty"`
	CreatedAtGte      *int                      `json:"createdAt_gte,omitempty"`
	CreatedAtLte      *int                      `json:"createdAt_lte,omitempty"`
	CreatedAtIn       []int                     `json:"createdAt_in,omitempty"`
	CreatedAtNull     *bool                     `json:"createdAt_null,omitempty"`
	Books             *BookFilterType           `json:"books,omitempty"`
}

type BookCategoryRelationship struct {
	ID          *string  `json:"id,omitempty"`
	Name        string   `json:"name"`
	Description *string  `json:"description,omitempty"`
	BooksIds    []string `json:"booksIds"`
}

type BookCategorySortType struct {
	ID          *ObjectSortType `json:"id,omitempty"`
	Name        *ObjectSortType `json:"name,omitempty"`
	Description *ObjectSortType `json:"description,omitempty"`
	DeletedBy   *ObjectSortType `json:"deletedBy,omitempty"`
	UpdatedBy   *ObjectSortType `json:"updatedBy,omitempty"`
	CreatedBy   *ObjectSortType `json:"createdBy,omitempty"`
	DeletedAt   *ObjectSortType `json:"deletedAt,omitempty"`
	UpdatedAt   *ObjectSortType `json:"updatedAt,omitempty"`
	CreatedAt   *ObjectSortType `json:"createdAt,omitempty"`
	BooksIds    *ObjectSortType `json:"booksIds,omitempty"`
	Books       *BookSortType   `json:"books,omitempty"`
}

type BookFilterType struct {
	And               []*BookFilterType       `json:"AND,omitempty"`
	Or                []*BookFilterType       `json:"OR,omitempty"`
	ID                *string                 `json:"id,omitempty"`
	IDNe              *string                 `json:"id_ne,omitempty"`
	IDGt              *string                 `json:"id_gt,omitempty"`
	IDLt              *string                 `json:"id_lt,omitempty"`
	IDGte             *string                 `json:"id_gte,omitempty"`
	IDLte             *string                 `json:"id_lte,omitempty"`
	IDIn              []string                `json:"id_in,omitempty"`
	IDNull            *bool                   `json:"id_null,omitempty"`
	Title             *string                 `json:"title,omitempty"`
	TitleNe           *string                 `json:"title_ne,omitempty"`
	TitleGt           *string                 `json:"title_gt,omitempty"`
	TitleLt           *string                 `json:"title_lt,omitempty"`
	TitleGte          *string                 `json:"title_gte,omitempty"`
	TitleLte          *string                 `json:"title_lte,omitempty"`
	TitleIn           []string                `json:"title_in,omitempty"`
	TitleLike         *string                 `json:"title_like,omitempty"`
	TitlePrefix       *string                 `json:"title_prefix,omitempty"`
	TitleSuffix       *string                 `json:"title_suffix,omitempty"`
	TitleNull         *bool                   `json:"title_null,omitempty"`
	Author            *string                 `json:"author,omitempty"`
	AuthorNe          *string                 `json:"author_ne,omitempty"`
	AuthorGt          *string                 `json:"author_gt,omitempty"`
	AuthorLt          *string                 `json:"author_lt,omitempty"`
	AuthorGte         *string                 `json:"author_gte,omitempty"`
	AuthorLte         *string                 `json:"author_lte,omitempty"`
	AuthorIn          []string                `json:"author_in,omitempty"`
	AuthorLike        *string                 `json:"author_like,omitempty"`
	AuthorPrefix      *string                 `json:"author_prefix,omitempty"`
	AuthorSuffix      *string                 `json:"author_suffix,omitempty"`
	AuthorNull        *bool                   `json:"author_null,omitempty"`
	Price             *int                    `json:"price,omitempty"`
	PriceNe           *int                    `json:"price_ne,omitempty"`
	PriceGt           *int                    `json:"price_gt,omitempty"`
	PriceLt           *int                    `json:"price_lt,omitempty"`
	PriceGte          *int                    `json:"price_gte,omitempty"`
	PriceLte          *int                    `json:"price_lte,omitempty"`
	PriceIn           []int                   `json:"price_in,omitempty"`
	PriceNull         *bool                   `json:"price_null,omitempty"`
	PublishDateAt     *int                    `json:"publishDateAt,omitempty"`
	PublishDateAtNe   *int                    `json:"publishDateAt_ne,omitempty"`
	PublishDateAtGt   *int                    `json:"publishDateAt_gt,omitempty"`
	PublishDateAtLt   *int                    `json:"publishDateAt_lt,omitempty"`
	PublishDateAtGte  *int                    `json:"publishDateAt_gte,omitempty"`
	PublishDateAtLte  *int                    `json:"publishDateAt_lte,omitempty"`
	PublishDateAtIn   []int                   `json:"publishDateAt_in,omitempty"`
	PublishDateAtNull *bool                   `json:"publishDateAt_null,omitempty"`
	CategoryID        *string                 `json:"categoryId,omitempty"`
	CategoryIDNe      *string                 `json:"categoryId_ne,omitempty"`
	CategoryIDGt      *string                 `json:"categoryId_gt,omitempty"`
	CategoryIDLt      *string                 `json:"categoryId_lt,omitempty"`
	CategoryIDGte     *string                 `json:"categoryId_gte,omitempty"`
	CategoryIDLte     *string                 `json:"categoryId_lte,omitempty"`
	CategoryIDIn      []string                `json:"categoryId_in,omitempty"`
	CategoryIDNull    *bool                   `json:"categoryId_null,omitempty"`
	DeletedBy         *string                 `json:"deletedBy,omitempty"`
	DeletedByNe       *string                 `json:"deletedBy_ne,omitempty"`
	DeletedByGt       *string                 `json:"deletedBy_gt,omitempty"`
	DeletedByLt       *string                 `json:"deletedBy_lt,omitempty"`
	DeletedByGte      *string                 `json:"deletedBy_gte,omitempty"`
	DeletedByLte      *string                 `json:"deletedBy_lte,omitempty"`
	DeletedByIn       []string                `json:"deletedBy_in,omitempty"`
	DeletedByNull     *bool                   `json:"deletedBy_null,omitempty"`
	UpdatedBy         *string                 `json:"updatedBy,omitempty"`
	UpdatedByNe       *string                 `json:"updatedBy_ne,omitempty"`
	UpdatedByGt       *string                 `json:"updatedBy_gt,omitempty"`
	UpdatedByLt       *string                 `json:"updatedBy_lt,omitempty"`
	UpdatedByGte      *string                 `json:"updatedBy_gte,omitempty"`
	UpdatedByLte      *string                 `json:"updatedBy_lte,omitempty"`
	UpdatedByIn       []string                `json:"updatedBy_in,omitempty"`
	UpdatedByNull     *bool                   `json:"updatedBy_null,omitempty"`
	CreatedBy         *string                 `json:"createdBy,omitempty"`
	CreatedByNe       *string                 `json:"createdBy_ne,omitempty"`
	CreatedByGt       *string                 `json:"createdBy_gt,omitempty"`
	CreatedByLt       *string                 `json:"createdBy_lt,omitempty"`
	CreatedByGte      *string                 `json:"createdBy_gte,omitempty"`
	CreatedByLte      *string                 `json:"createdBy_lte,omitempty"`
	CreatedByIn       []string                `json:"createdBy_in,omitempty"`
	CreatedByNull     *bool                   `json:"createdBy_null,omitempty"`
	DeletedAt         *int                    `json:"deletedAt,omitempty"`
	DeletedAtNe       *int                    `json:"deletedAt_ne,omitempty"`
	DeletedAtGt       *int                    `json:"deletedAt_gt,omitempty"`
	DeletedAtLt       *int                    `json:"deletedAt_lt,omitempty"`
	DeletedAtGte      *int                    `json:"deletedAt_gte,omitempty"`
	DeletedAtLte      *int                    `json:"deletedAt_lte,omitempty"`
	DeletedAtIn       []int                   `json:"deletedAt_in,omitempty"`
	DeletedAtNull     *bool                   `json:"deletedAt_null,omitempty"`
	UpdatedAt         *int                    `json:"updatedAt,omitempty"`
	UpdatedAtNe       *int                    `json:"updatedAt_ne,omitempty"`
	UpdatedAtGt       *int                    `json:"updatedAt_gt,omitempty"`
	UpdatedAtLt       *int                    `json:"updatedAt_lt,omitempty"`
	UpdatedAtGte      *int                    `json:"updatedAt_gte,omitempty"`
	UpdatedAtLte      *int                    `json:"updatedAt_lte,omitempty"`
	UpdatedAtIn       []int                   `json:"updatedAt_in,omitempty"`
	UpdatedAtNull     *bool                   `json:"updatedAt_null,omitempty"`
	CreatedAt         *int                    `json:"createdAt,omitempty"`
	CreatedAtNe       *int                    `json:"createdAt_ne,omitempty"`
	CreatedAtGt       *int                    `json:"createdAt_gt,omitempty"`
	CreatedAtLt       *int                    `json:"createdAt_lt,omitempty"`
	CreatedAtGte      *int                    `json:"createdAt_gte,omitempty"`
	CreatedAtLte      *int                    `json:"createdAt_lte,omitempty"`
	CreatedAtIn       []int                   `json:"createdAt_in,omitempty"`
	CreatedAtNull     *bool                   `json:"createdAt_null,omitempty"`
	Category          *BookCategoryFilterType `json:"category,omitempty"`
}

type BookRelationship struct {
	ID            *string `json:"id,omitempty"`
	Title         string  `json:"title"`
	Author        string  `json:"author"`
	Price         *int    `json:"price,omitempty"`
	PublishDateAt *int    `json:"publishDateAt,omitempty"`
	CategoryID    *string `json:"categoryId,omitempty"`
}

type BookSortType struct {
	ID            *ObjectSortType       `json:"id,omitempty"`
	Title         *ObjectSortType       `json:"title,omitempty"`
	Author        *ObjectSortType       `json:"author,omitempty"`
	Price         *ObjectSortType       `json:"price,omitempty"`
	PublishDateAt *ObjectSortType       `json:"publishDateAt,omitempty"`
	CategoryID    *ObjectSortType       `json:"categoryId,omitempty"`
	DeletedBy     *ObjectSortType       `json:"deletedBy,omitempty"`
	UpdatedBy     *ObjectSortType       `json:"updatedBy,omitempty"`
	CreatedBy     *ObjectSortType       `json:"createdBy,omitempty"`
	DeletedAt     *ObjectSortType       `json:"deletedAt,omitempty"`
	UpdatedAt     *ObjectSortType       `json:"updatedAt,omitempty"`
	CreatedAt     *ObjectSortType       `json:"createdAt,omitempty"`
	Category      *BookCategorySortType `json:"category,omitempty"`
}

type FileField struct {
	Hash string         `json:"hash"`
	File graphql.Upload `json:"file"`
}

type ObjectSortType string

const (
	ObjectSortTypeAsc  ObjectSortType = "ASC"
	ObjectSortTypeDesc ObjectSortType = "DESC"
)

var AllObjectSortType = []ObjectSortType{
	ObjectSortTypeAsc,
	ObjectSortTypeDesc,
}

func (e ObjectSortType) IsValid() bool {
	switch e {
	case ObjectSortTypeAsc, ObjectSortTypeDesc:
		return true
	}
	return false
}

func (e ObjectSortType) String() string {
	return string(e)
}

func (e *ObjectSortType) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = ObjectSortType(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid ObjectSortType", str)
	}
	return nil
}

func (e ObjectSortType) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
