// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package gen

import (
	"fmt"
	"io"
	"strconv"
	"time"

	"github.com/99designs/gqlgen/graphql"
)

type FileField struct {
	Hash string         `json:"hash"`
	File graphql.Upload `json:"file"`
}

type TaskFilterType struct {
	And            []*TaskFilterType `json:"AND,omitempty"`
	Or             []*TaskFilterType `json:"OR,omitempty"`
	ID             *string           `json:"id,omitempty"`
	IDNe           *string           `json:"id_ne,omitempty"`
	IDGt           *string           `json:"id_gt,omitempty"`
	IDLt           *string           `json:"id_lt,omitempty"`
	IDGte          *string           `json:"id_gte,omitempty"`
	IDLte          *string           `json:"id_lte,omitempty"`
	IDIn           []string          `json:"id_in,omitempty"`
	IDNull         *bool             `json:"id_null,omitempty"`
	Title          *string           `json:"title,omitempty"`
	TitleNe        *string           `json:"title_ne,omitempty"`
	TitleGt        *string           `json:"title_gt,omitempty"`
	TitleLt        *string           `json:"title_lt,omitempty"`
	TitleGte       *string           `json:"title_gte,omitempty"`
	TitleLte       *string           `json:"title_lte,omitempty"`
	TitleIn        []string          `json:"title_in,omitempty"`
	TitleLike      *string           `json:"title_like,omitempty"`
	TitlePrefix    *string           `json:"title_prefix,omitempty"`
	TitleSuffix    *string           `json:"title_suffix,omitempty"`
	TitleNull      *bool             `json:"title_null,omitempty"`
	Completed      *bool             `json:"completed,omitempty"`
	CompletedNe    *bool             `json:"completed_ne,omitempty"`
	CompletedGt    *bool             `json:"completed_gt,omitempty"`
	CompletedLt    *bool             `json:"completed_lt,omitempty"`
	CompletedGte   *bool             `json:"completed_gte,omitempty"`
	CompletedLte   *bool             `json:"completed_lte,omitempty"`
	CompletedIn    []bool            `json:"completed_in,omitempty"`
	CompletedNull  *bool             `json:"completed_null,omitempty"`
	DueDate        *time.Time        `json:"dueDate,omitempty"`
	DueDateNe      *time.Time        `json:"dueDate_ne,omitempty"`
	DueDateGt      *time.Time        `json:"dueDate_gt,omitempty"`
	DueDateLt      *time.Time        `json:"dueDate_lt,omitempty"`
	DueDateGte     *time.Time        `json:"dueDate_gte,omitempty"`
	DueDateLte     *time.Time        `json:"dueDate_lte,omitempty"`
	DueDateIn      []*time.Time      `json:"dueDate_in,omitempty"`
	DueDateNull    *bool             `json:"dueDate_null,omitempty"`
	AssigneeID     *string           `json:"assigneeId,omitempty"`
	AssigneeIDNe   *string           `json:"assigneeId_ne,omitempty"`
	AssigneeIDGt   *string           `json:"assigneeId_gt,omitempty"`
	AssigneeIDLt   *string           `json:"assigneeId_lt,omitempty"`
	AssigneeIDGte  *string           `json:"assigneeId_gte,omitempty"`
	AssigneeIDLte  *string           `json:"assigneeId_lte,omitempty"`
	AssigneeIDIn   []string          `json:"assigneeId_in,omitempty"`
	AssigneeIDNull *bool             `json:"assigneeId_null,omitempty"`
	DeletedBy      *string           `json:"deletedBy,omitempty"`
	DeletedByNe    *string           `json:"deletedBy_ne,omitempty"`
	DeletedByGt    *string           `json:"deletedBy_gt,omitempty"`
	DeletedByLt    *string           `json:"deletedBy_lt,omitempty"`
	DeletedByGte   *string           `json:"deletedBy_gte,omitempty"`
	DeletedByLte   *string           `json:"deletedBy_lte,omitempty"`
	DeletedByIn    []string          `json:"deletedBy_in,omitempty"`
	DeletedByNull  *bool             `json:"deletedBy_null,omitempty"`
	UpdatedBy      *string           `json:"updatedBy,omitempty"`
	UpdatedByNe    *string           `json:"updatedBy_ne,omitempty"`
	UpdatedByGt    *string           `json:"updatedBy_gt,omitempty"`
	UpdatedByLt    *string           `json:"updatedBy_lt,omitempty"`
	UpdatedByGte   *string           `json:"updatedBy_gte,omitempty"`
	UpdatedByLte   *string           `json:"updatedBy_lte,omitempty"`
	UpdatedByIn    []string          `json:"updatedBy_in,omitempty"`
	UpdatedByNull  *bool             `json:"updatedBy_null,omitempty"`
	CreatedBy      *string           `json:"createdBy,omitempty"`
	CreatedByNe    *string           `json:"createdBy_ne,omitempty"`
	CreatedByGt    *string           `json:"createdBy_gt,omitempty"`
	CreatedByLt    *string           `json:"createdBy_lt,omitempty"`
	CreatedByGte   *string           `json:"createdBy_gte,omitempty"`
	CreatedByLte   *string           `json:"createdBy_lte,omitempty"`
	CreatedByIn    []string          `json:"createdBy_in,omitempty"`
	CreatedByNull  *bool             `json:"createdBy_null,omitempty"`
	DeletedAt      *int              `json:"deletedAt,omitempty"`
	DeletedAtNe    *int              `json:"deletedAt_ne,omitempty"`
	DeletedAtGt    *int              `json:"deletedAt_gt,omitempty"`
	DeletedAtLt    *int              `json:"deletedAt_lt,omitempty"`
	DeletedAtGte   *int              `json:"deletedAt_gte,omitempty"`
	DeletedAtLte   *int              `json:"deletedAt_lte,omitempty"`
	DeletedAtIn    []int             `json:"deletedAt_in,omitempty"`
	DeletedAtNull  *bool             `json:"deletedAt_null,omitempty"`
	UpdatedAt      *int              `json:"updatedAt,omitempty"`
	UpdatedAtNe    *int              `json:"updatedAt_ne,omitempty"`
	UpdatedAtGt    *int              `json:"updatedAt_gt,omitempty"`
	UpdatedAtLt    *int              `json:"updatedAt_lt,omitempty"`
	UpdatedAtGte   *int              `json:"updatedAt_gte,omitempty"`
	UpdatedAtLte   *int              `json:"updatedAt_lte,omitempty"`
	UpdatedAtIn    []int             `json:"updatedAt_in,omitempty"`
	UpdatedAtNull  *bool             `json:"updatedAt_null,omitempty"`
	CreatedAt      *int              `json:"createdAt,omitempty"`
	CreatedAtNe    *int              `json:"createdAt_ne,omitempty"`
	CreatedAtGt    *int              `json:"createdAt_gt,omitempty"`
	CreatedAtLt    *int              `json:"createdAt_lt,omitempty"`
	CreatedAtGte   *int              `json:"createdAt_gte,omitempty"`
	CreatedAtLte   *int              `json:"createdAt_lte,omitempty"`
	CreatedAtIn    []int             `json:"createdAt_in,omitempty"`
	CreatedAtNull  *bool             `json:"createdAt_null,omitempty"`
	Assignee       *UserFilterType   `json:"assignee,omitempty"`
}

type TaskRelationship struct {
	ID         *string    `json:"id,omitempty"`
	Title      *string    `json:"title,omitempty"`
	Completed  *bool      `json:"completed,omitempty"`
	DueDate    *time.Time `json:"dueDate,omitempty"`
	AssigneeID *string    `json:"assigneeId,omitempty"`
}

type TaskSortType struct {
	ID         *ObjectSortType `json:"id,omitempty"`
	Title      *ObjectSortType `json:"title,omitempty"`
	Completed  *ObjectSortType `json:"completed,omitempty"`
	DueDate    *ObjectSortType `json:"dueDate,omitempty"`
	AssigneeID *ObjectSortType `json:"assigneeId,omitempty"`
	DeletedBy  *ObjectSortType `json:"deletedBy,omitempty"`
	UpdatedBy  *ObjectSortType `json:"updatedBy,omitempty"`
	CreatedBy  *ObjectSortType `json:"createdBy,omitempty"`
	DeletedAt  *ObjectSortType `json:"deletedAt,omitempty"`
	UpdatedAt  *ObjectSortType `json:"updatedAt,omitempty"`
	CreatedAt  *ObjectSortType `json:"createdAt,omitempty"`
	Assignee   *UserSortType   `json:"assignee,omitempty"`
}

type UploadFileFilterType struct {
	And           []*UploadFileFilterType `json:"AND,omitempty"`
	Or            []*UploadFileFilterType `json:"OR,omitempty"`
	ID            *string                 `json:"id,omitempty"`
	IDNe          *string                 `json:"id_ne,omitempty"`
	IDGt          *string                 `json:"id_gt,omitempty"`
	IDLt          *string                 `json:"id_lt,omitempty"`
	IDGte         *string                 `json:"id_gte,omitempty"`
	IDLte         *string                 `json:"id_lte,omitempty"`
	IDIn          []string                `json:"id_in,omitempty"`
	IDNull        *bool                   `json:"id_null,omitempty"`
	Name          *string                 `json:"name,omitempty"`
	NameNe        *string                 `json:"name_ne,omitempty"`
	NameGt        *string                 `json:"name_gt,omitempty"`
	NameLt        *string                 `json:"name_lt,omitempty"`
	NameGte       *string                 `json:"name_gte,omitempty"`
	NameLte       *string                 `json:"name_lte,omitempty"`
	NameIn        []string                `json:"name_in,omitempty"`
	NameLike      *string                 `json:"name_like,omitempty"`
	NamePrefix    *string                 `json:"name_prefix,omitempty"`
	NameSuffix    *string                 `json:"name_suffix,omitempty"`
	NameNull      *bool                   `json:"name_null,omitempty"`
	Hash          *string                 `json:"hash,omitempty"`
	HashNe        *string                 `json:"hash_ne,omitempty"`
	HashGt        *string                 `json:"hash_gt,omitempty"`
	HashLt        *string                 `json:"hash_lt,omitempty"`
	HashGte       *string                 `json:"hash_gte,omitempty"`
	HashLte       *string                 `json:"hash_lte,omitempty"`
	HashIn        []string                `json:"hash_in,omitempty"`
	HashLike      *string                 `json:"hash_like,omitempty"`
	HashPrefix    *string                 `json:"hash_prefix,omitempty"`
	HashSuffix    *string                 `json:"hash_suffix,omitempty"`
	HashNull      *bool                   `json:"hash_null,omitempty"`
	DeletedBy     *string                 `json:"deletedBy,omitempty"`
	DeletedByNe   *string                 `json:"deletedBy_ne,omitempty"`
	DeletedByGt   *string                 `json:"deletedBy_gt,omitempty"`
	DeletedByLt   *string                 `json:"deletedBy_lt,omitempty"`
	DeletedByGte  *string                 `json:"deletedBy_gte,omitempty"`
	DeletedByLte  *string                 `json:"deletedBy_lte,omitempty"`
	DeletedByIn   []string                `json:"deletedBy_in,omitempty"`
	DeletedByNull *bool                   `json:"deletedBy_null,omitempty"`
	UpdatedBy     *string                 `json:"updatedBy,omitempty"`
	UpdatedByNe   *string                 `json:"updatedBy_ne,omitempty"`
	UpdatedByGt   *string                 `json:"updatedBy_gt,omitempty"`
	UpdatedByLt   *string                 `json:"updatedBy_lt,omitempty"`
	UpdatedByGte  *string                 `json:"updatedBy_gte,omitempty"`
	UpdatedByLte  *string                 `json:"updatedBy_lte,omitempty"`
	UpdatedByIn   []string                `json:"updatedBy_in,omitempty"`
	UpdatedByNull *bool                   `json:"updatedBy_null,omitempty"`
	CreatedBy     *string                 `json:"createdBy,omitempty"`
	CreatedByNe   *string                 `json:"createdBy_ne,omitempty"`
	CreatedByGt   *string                 `json:"createdBy_gt,omitempty"`
	CreatedByLt   *string                 `json:"createdBy_lt,omitempty"`
	CreatedByGte  *string                 `json:"createdBy_gte,omitempty"`
	CreatedByLte  *string                 `json:"createdBy_lte,omitempty"`
	CreatedByIn   []string                `json:"createdBy_in,omitempty"`
	CreatedByNull *bool                   `json:"createdBy_null,omitempty"`
	DeletedAt     *int                    `json:"deletedAt,omitempty"`
	DeletedAtNe   *int                    `json:"deletedAt_ne,omitempty"`
	DeletedAtGt   *int                    `json:"deletedAt_gt,omitempty"`
	DeletedAtLt   *int                    `json:"deletedAt_lt,omitempty"`
	DeletedAtGte  *int                    `json:"deletedAt_gte,omitempty"`
	DeletedAtLte  *int                    `json:"deletedAt_lte,omitempty"`
	DeletedAtIn   []int                   `json:"deletedAt_in,omitempty"`
	DeletedAtNull *bool                   `json:"deletedAt_null,omitempty"`
	UpdatedAt     *int                    `json:"updatedAt,omitempty"`
	UpdatedAtNe   *int                    `json:"updatedAt_ne,omitempty"`
	UpdatedAtGt   *int                    `json:"updatedAt_gt,omitempty"`
	UpdatedAtLt   *int                    `json:"updatedAt_lt,omitempty"`
	UpdatedAtGte  *int                    `json:"updatedAt_gte,omitempty"`
	UpdatedAtLte  *int                    `json:"updatedAt_lte,omitempty"`
	UpdatedAtIn   []int                   `json:"updatedAt_in,omitempty"`
	UpdatedAtNull *bool                   `json:"updatedAt_null,omitempty"`
	CreatedAt     *int                    `json:"createdAt,omitempty"`
	CreatedAtNe   *int                    `json:"createdAt_ne,omitempty"`
	CreatedAtGt   *int                    `json:"createdAt_gt,omitempty"`
	CreatedAtLt   *int                    `json:"createdAt_lt,omitempty"`
	CreatedAtGte  *int                    `json:"createdAt_gte,omitempty"`
	CreatedAtLte  *int                    `json:"createdAt_lte,omitempty"`
	CreatedAtIn   []int                   `json:"createdAt_in,omitempty"`
	CreatedAtNull *bool                   `json:"createdAt_null,omitempty"`
}

type UploadFileRelationship struct {
	ID   *string `json:"id,omitempty"`
	Name string  `json:"name"`
	Hash string  `json:"hash"`
}

type UploadFileSortType struct {
	ID        *ObjectSortType `json:"id,omitempty"`
	Name      *ObjectSortType `json:"name,omitempty"`
	Hash      *ObjectSortType `json:"hash,omitempty"`
	DeletedBy *ObjectSortType `json:"deletedBy,omitempty"`
	UpdatedBy *ObjectSortType `json:"updatedBy,omitempty"`
	CreatedBy *ObjectSortType `json:"createdBy,omitempty"`
	DeletedAt *ObjectSortType `json:"deletedAt,omitempty"`
	UpdatedAt *ObjectSortType `json:"updatedAt,omitempty"`
	CreatedAt *ObjectSortType `json:"createdAt,omitempty"`
}

type UserFilterType struct {
	And            []*UserFilterType `json:"AND,omitempty"`
	Or             []*UserFilterType `json:"OR,omitempty"`
	ID             *string           `json:"id,omitempty"`
	IDNe           *string           `json:"id_ne,omitempty"`
	IDGt           *string           `json:"id_gt,omitempty"`
	IDLt           *string           `json:"id_lt,omitempty"`
	IDGte          *string           `json:"id_gte,omitempty"`
	IDLte          *string           `json:"id_lte,omitempty"`
	IDIn           []string          `json:"id_in,omitempty"`
	IDNull         *bool             `json:"id_null,omitempty"`
	Phone          *string           `json:"phone,omitempty"`
	PhoneNe        *string           `json:"phone_ne,omitempty"`
	PhoneGt        *string           `json:"phone_gt,omitempty"`
	PhoneLt        *string           `json:"phone_lt,omitempty"`
	PhoneGte       *string           `json:"phone_gte,omitempty"`
	PhoneLte       *string           `json:"phone_lte,omitempty"`
	PhoneIn        []string          `json:"phone_in,omitempty"`
	PhoneLike      *string           `json:"phone_like,omitempty"`
	PhonePrefix    *string           `json:"phone_prefix,omitempty"`
	PhoneSuffix    *string           `json:"phone_suffix,omitempty"`
	PhoneNull      *bool             `json:"phone_null,omitempty"`
	Password       *string           `json:"password,omitempty"`
	PasswordNe     *string           `json:"password_ne,omitempty"`
	PasswordGt     *string           `json:"password_gt,omitempty"`
	PasswordLt     *string           `json:"password_lt,omitempty"`
	PasswordGte    *string           `json:"password_gte,omitempty"`
	PasswordLte    *string           `json:"password_lte,omitempty"`
	PasswordIn     []string          `json:"password_in,omitempty"`
	PasswordLike   *string           `json:"password_like,omitempty"`
	PasswordPrefix *string           `json:"password_prefix,omitempty"`
	PasswordSuffix *string           `json:"password_suffix,omitempty"`
	PasswordNull   *bool             `json:"password_null,omitempty"`
	Email          *string           `json:"email,omitempty"`
	EmailNe        *string           `json:"email_ne,omitempty"`
	EmailGt        *string           `json:"email_gt,omitempty"`
	EmailLt        *string           `json:"email_lt,omitempty"`
	EmailGte       *string           `json:"email_gte,omitempty"`
	EmailLte       *string           `json:"email_lte,omitempty"`
	EmailIn        []string          `json:"email_in,omitempty"`
	EmailLike      *string           `json:"email_like,omitempty"`
	EmailPrefix    *string           `json:"email_prefix,omitempty"`
	EmailSuffix    *string           `json:"email_suffix,omitempty"`
	EmailNull      *bool             `json:"email_null,omitempty"`
	Nickname       *string           `json:"nickname,omitempty"`
	NicknameNe     *string           `json:"nickname_ne,omitempty"`
	NicknameGt     *string           `json:"nickname_gt,omitempty"`
	NicknameLt     *string           `json:"nickname_lt,omitempty"`
	NicknameGte    *string           `json:"nickname_gte,omitempty"`
	NicknameLte    *string           `json:"nickname_lte,omitempty"`
	NicknameIn     []string          `json:"nickname_in,omitempty"`
	NicknameLike   *string           `json:"nickname_like,omitempty"`
	NicknamePrefix *string           `json:"nickname_prefix,omitempty"`
	NicknameSuffix *string           `json:"nickname_suffix,omitempty"`
	NicknameNull   *bool             `json:"nickname_null,omitempty"`
	Age            *int              `json:"age,omitempty"`
	AgeNe          *int              `json:"age_ne,omitempty"`
	AgeGt          *int              `json:"age_gt,omitempty"`
	AgeLt          *int              `json:"age_lt,omitempty"`
	AgeGte         *int              `json:"age_gte,omitempty"`
	AgeLte         *int              `json:"age_lte,omitempty"`
	AgeIn          []int             `json:"age_in,omitempty"`
	AgeNull        *bool             `json:"age_null,omitempty"`
	LastName       *string           `json:"lastName,omitempty"`
	LastNameNe     *string           `json:"lastName_ne,omitempty"`
	LastNameGt     *string           `json:"lastName_gt,omitempty"`
	LastNameLt     *string           `json:"lastName_lt,omitempty"`
	LastNameGte    *string           `json:"lastName_gte,omitempty"`
	LastNameLte    *string           `json:"lastName_lte,omitempty"`
	LastNameIn     []string          `json:"lastName_in,omitempty"`
	LastNameLike   *string           `json:"lastName_like,omitempty"`
	LastNamePrefix *string           `json:"lastName_prefix,omitempty"`
	LastNameSuffix *string           `json:"lastName_suffix,omitempty"`
	LastNameNull   *bool             `json:"lastName_null,omitempty"`
	DeletedBy      *string           `json:"deletedBy,omitempty"`
	DeletedByNe    *string           `json:"deletedBy_ne,omitempty"`
	DeletedByGt    *string           `json:"deletedBy_gt,omitempty"`
	DeletedByLt    *string           `json:"deletedBy_lt,omitempty"`
	DeletedByGte   *string           `json:"deletedBy_gte,omitempty"`
	DeletedByLte   *string           `json:"deletedBy_lte,omitempty"`
	DeletedByIn    []string          `json:"deletedBy_in,omitempty"`
	DeletedByNull  *bool             `json:"deletedBy_null,omitempty"`
	UpdatedBy      *string           `json:"updatedBy,omitempty"`
	UpdatedByNe    *string           `json:"updatedBy_ne,omitempty"`
	UpdatedByGt    *string           `json:"updatedBy_gt,omitempty"`
	UpdatedByLt    *string           `json:"updatedBy_lt,omitempty"`
	UpdatedByGte   *string           `json:"updatedBy_gte,omitempty"`
	UpdatedByLte   *string           `json:"updatedBy_lte,omitempty"`
	UpdatedByIn    []string          `json:"updatedBy_in,omitempty"`
	UpdatedByNull  *bool             `json:"updatedBy_null,omitempty"`
	CreatedBy      *string           `json:"createdBy,omitempty"`
	CreatedByNe    *string           `json:"createdBy_ne,omitempty"`
	CreatedByGt    *string           `json:"createdBy_gt,omitempty"`
	CreatedByLt    *string           `json:"createdBy_lt,omitempty"`
	CreatedByGte   *string           `json:"createdBy_gte,omitempty"`
	CreatedByLte   *string           `json:"createdBy_lte,omitempty"`
	CreatedByIn    []string          `json:"createdBy_in,omitempty"`
	CreatedByNull  *bool             `json:"createdBy_null,omitempty"`
	DeletedAt      *int              `json:"deletedAt,omitempty"`
	DeletedAtNe    *int              `json:"deletedAt_ne,omitempty"`
	DeletedAtGt    *int              `json:"deletedAt_gt,omitempty"`
	DeletedAtLt    *int              `json:"deletedAt_lt,omitempty"`
	DeletedAtGte   *int              `json:"deletedAt_gte,omitempty"`
	DeletedAtLte   *int              `json:"deletedAt_lte,omitempty"`
	DeletedAtIn    []int             `json:"deletedAt_in,omitempty"`
	DeletedAtNull  *bool             `json:"deletedAt_null,omitempty"`
	UpdatedAt      *int              `json:"updatedAt,omitempty"`
	UpdatedAtNe    *int              `json:"updatedAt_ne,omitempty"`
	UpdatedAtGt    *int              `json:"updatedAt_gt,omitempty"`
	UpdatedAtLt    *int              `json:"updatedAt_lt,omitempty"`
	UpdatedAtGte   *int              `json:"updatedAt_gte,omitempty"`
	UpdatedAtLte   *int              `json:"updatedAt_lte,omitempty"`
	UpdatedAtIn    []int             `json:"updatedAt_in,omitempty"`
	UpdatedAtNull  *bool             `json:"updatedAt_null,omitempty"`
	CreatedAt      *int              `json:"createdAt,omitempty"`
	CreatedAtNe    *int              `json:"createdAt_ne,omitempty"`
	CreatedAtGt    *int              `json:"createdAt_gt,omitempty"`
	CreatedAtLt    *int              `json:"createdAt_lt,omitempty"`
	CreatedAtGte   *int              `json:"createdAt_gte,omitempty"`
	CreatedAtLte   *int              `json:"createdAt_lte,omitempty"`
	CreatedAtIn    []int             `json:"createdAt_in,omitempty"`
	CreatedAtNull  *bool             `json:"createdAt_null,omitempty"`
	Tasks          *TaskFilterType   `json:"tasks,omitempty"`
}

type UserRelationship struct {
	ID       *string  `json:"id,omitempty"`
	Phone    string   `json:"phone"`
	Password string   `json:"password"`
	Email    *string  `json:"email,omitempty"`
	Nickname *string  `json:"nickname,omitempty"`
	Age      *int     `json:"age,omitempty"`
	LastName *string  `json:"lastName,omitempty"`
	TasksIds []string `json:"tasksIds,omitempty"`
}

type UserSortType struct {
	ID        *ObjectSortType `json:"id,omitempty"`
	Phone     *ObjectSortType `json:"phone,omitempty"`
	Password  *ObjectSortType `json:"password,omitempty"`
	Email     *ObjectSortType `json:"email,omitempty"`
	Nickname  *ObjectSortType `json:"nickname,omitempty"`
	Age       *ObjectSortType `json:"age,omitempty"`
	LastName  *ObjectSortType `json:"lastName,omitempty"`
	DeletedBy *ObjectSortType `json:"deletedBy,omitempty"`
	UpdatedBy *ObjectSortType `json:"updatedBy,omitempty"`
	CreatedBy *ObjectSortType `json:"createdBy,omitempty"`
	DeletedAt *ObjectSortType `json:"deletedAt,omitempty"`
	UpdatedAt *ObjectSortType `json:"updatedAt,omitempty"`
	CreatedAt *ObjectSortType `json:"createdAt,omitempty"`
	TasksIds  *ObjectSortType `json:"tasksIds,omitempty"`
	Tasks     *TaskSortType   `json:"tasks,omitempty"`
}

type ObjectSortType string

const (
	ObjectSortTypeAsc  ObjectSortType = "ASC"
	ObjectSortTypeDesc ObjectSortType = "DESC"
)

var AllObjectSortType = []ObjectSortType{
	ObjectSortTypeAsc,
	ObjectSortTypeDesc,
}

func (e ObjectSortType) IsValid() bool {
	switch e {
	case ObjectSortTypeAsc, ObjectSortTypeDesc:
		return true
	}
	return false
}

func (e ObjectSortType) String() string {
	return string(e)
}

func (e *ObjectSortType) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = ObjectSortType(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid ObjectSortType", str)
	}
	return nil
}

func (e ObjectSortType) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
