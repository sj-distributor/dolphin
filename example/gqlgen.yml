# Generated with dolphin

schema:
  - gen/*.graphqls

# Where should the generated server code go?
exec:
  filename: gen/generated.go
  package: gen

# Uncomment to enable federation
# federation:
#   filename: gen/federation.go
#   package: gen
#   version: 2
#   options
#     computed_requires: true

# Where should any generated models go?
model:
  filename: gen/models_gen.go
  package: gen

# Where should the resolver implementations go?
# resolver:
  # layout: follow-schema
  # dir: gen
  # package: gen
  # filename_template: "{name}.resolvers.go"

autobind:
  - "github.com/sj-distributor/dolphin-example/gen"

models:
  
  User:
    model: github.com/sj-distributor/dolphin-example/gen.User
    fields:
      tasks:
        resolver: true
  UserResultType:
    model: github.com/sj-distributor/dolphin-example/gen.UserResultType
    fields:
      data:
        resolver: true
      total:
        resolver: true
      current_page:
        resolver: true
      per_page:
        resolver: true
      total_page:
        resolver: true
  UserCreateInput:
    model: "map[string]interface{}"
  UserUpdateInput:
    model: "map[string]interface{}"
  
  Task:
    model: github.com/sj-distributor/dolphin-example/gen.Task
    fields:
      user:
        resolver: true
  TaskResultType:
    model: github.com/sj-distributor/dolphin-example/gen.TaskResultType
    fields:
      data:
        resolver: true
      total:
        resolver: true
      current_page:
        resolver: true
      per_page:
        resolver: true
      total_page:
        resolver: true
  TaskCreateInput:
    model: "map[string]interface{}"
  TaskUpdateInput:
    model: "map[string]interface{}"
  
  _Any:
    model: github.com/sj-distributor/dolphin-example/gen._Any
